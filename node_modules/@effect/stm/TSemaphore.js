"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withPermitsScoped = exports.withPermits = exports.withPermitScoped = exports.withPermit = exports.unsafeMake = exports.releaseN = exports.release = exports.make = exports.available = exports.acquireN = exports.acquire = exports.TSemaphoreTypeId = void 0;
var internal = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("@effect/stm/internal/tSemaphore"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/**
 * @since 1.0.0
 */

/**
 * @since 1.0.0
 * @category symbols
 */
const TSemaphoreTypeId = internal.TSemaphoreTypeId;
/**
 * @since 1.0.0
 * @category mutations
 */
exports.TSemaphoreTypeId = TSemaphoreTypeId;
const acquire = internal.acquire;
/**
 * @since 1.0.0
 * @category mutations
 */
exports.acquire = acquire;
const acquireN = internal.acquireN;
/**
 * @since 1.0.0
 * @category getters
 */
exports.acquireN = acquireN;
const available = internal.available;
/**
 * @since 1.0.0
 * @category constructors
 */
exports.available = available;
const make = internal.make;
/**
 * @since 1.0.0
 * @category mutations
 */
exports.make = make;
const release = internal.release;
/**
 * @since 1.0.0
 * @category mutations
 */
exports.release = release;
const releaseN = internal.releaseN;
/**
 * @since 1.0.0
 * @category mutations
 */
exports.releaseN = releaseN;
const withPermit = internal.withPermit;
/**
 * @since 1.0.0
 * @category mutations
 */
exports.withPermit = withPermit;
const withPermits = internal.withPermits;
/**
 * @since 1.0.0
 * @category mutations
 */
exports.withPermits = withPermits;
const withPermitScoped = internal.withPermitScoped;
/**
 * @since 1.0.0
 * @category mutations
 */
exports.withPermitScoped = withPermitScoped;
const withPermitsScoped = internal.withPermitsScoped;
/**
 * @since 1.0.0
 * @category unsafe
 */
exports.withPermitsScoped = withPermitsScoped;
const unsafeMake = internal.unsafeMakeSemaphore;
exports.unsafeMake = unsafeMake;
//# sourceMappingURL=TSemaphore.js.map